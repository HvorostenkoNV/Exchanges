@startuml

namespace Main.Exchange #BBB {
    class Exchange << (S,#CC0000) Singleton >> {
        +run() : void
    }

    namespace Participants #FFF {
        interface Participant {
            +getFields() : Fields.FieldsSet
            +getProvidedData() : Data.ProvidedData
            +deliveryData(Data.DataForDelivery $data) : bool
        }
    }

    namespace Procedures #FFF {
        class Manager {
            +{static}getProcedures(Main.Data.Map $filter = null) : Data.ProceduresSet
        }

        interface Procedure {
            +getParticipants() : Data.ParticipantsSet
            +getFields() : Fields.ProceduresFieldsSet
            +getDataMatchingRules() : Rules.MatchingRules
        }

        Manager - Procedure
    }

    namespace DataProcessors #FFF {
        class Manager {
            +getCollector(Procedure $procedure) : Collector
            +getMatcher(Procedure $procedure) : Matcher
            +getCombiner(Procedure $procedure) : Combiner
            +getProvider(Procedure $procedure) : Provider
        }

        interface Processor {
            +__construct(Procedure $procedure)
            +getProcedure() : Procedure
        }

        Manager - Processor
    }

    Exchange                                -   Main.Exchange.DataProcessors.Manager
    Main.Exchange.DataProcessors.Manager    -   Main.Exchange.Procedures.Manager
    Main.Exchange.Procedures.Procedure      *-- Main.Exchange.Participants.Participant
    Main.Exchange.DataProcessors.Processor  o-- Main.Exchange.Procedures.Procedure
}

@enduml