@startuml

namespace Main.Exchange.Procedures #BBB {
    class Manager {
        +{static}getProcedures(Main.Data.Map $filter = null) : Data.ProceduresSet
    }

    interface Procedure {
        +getCode() : string
        +getParticipants() : Data.ParticipantsSet
        +getFields() : Fields.FieldsSet
        +getDataMatchingRules() : Rules.DataMatchingRules
        +getDataCombiningRules() : Rules.DataCombiningRules
    }

    abstract AbstractProcedure {

    }

    class ExchangeProcedure {

    }
    /' ------------------------------------------- '/
    /' ----------------- Fields ------------------ '/
    /' ------------------------------------------- '/
    namespace Fields #FFF {
        class FieldsSet <extends Main.Data.SetData> {
            +current() : Field|null
            +delete(Field $object) : void
            +push(Field $object) :void
        }

        class Field {
            +__construct(Main.Exchange.Procedures.Procedure $procedure, Main.Data.Map $params, Participants.Fields.Field[] $participantFields)
            +getProcedure() : Main.Exchange.Procedures.Procedure
            +getParam(string $param) : mixed
            +getParticipantsFields() : Main.Exchange.Participants.Fields.Field[]
        }
    }
    /' ------------------------------------------- '/
    /' ------------------ Rules ------------------ '/
    /' ------------------------------------------- '/
    namespace Rules #FFF {
        interface Rule {

        }

        class DataMatchingRules <extends Main.Data.MapData> {
            +set(Main.Exchange.Procedures.Data.ParticipantsSet $key, Main.Exchange.Procedures.Fields.FieldsSet $value) : void
            +get(Main.Exchange.Procedures.Data.ParticipantsSet $key) : Main.Exchange.Procedures.Fields.FieldsSet
        }

        class DataCombiningRules <extends Main.Data.MapData> {
            +set(Participants.Fields.Field $key, int $value) : void
            +get(Participants.Fields.Field $key) : int
        }
    }
    /' ------------------------------------------- '/
    /' ------------------ Data ------------------- '/
    /' ------------------------------------------- '/
    namespace Data #FFF {
        class ParticipantsSet <extends Main.Data.SetData> {
            +current() : ?Participants.Participant
            +delete(Participants.Participant $object) : void
            +push(Participants.Participant $object) :void
        }

        class ProceduresSet < extends Main.Data.SetData > {
            +current() : ?Procedures.Procedure
            +delete(Procedures.Procedure $object) : void
            +push(Procedures.Procedure $object) :void
        }
    }
    /' ------------------------------------------- '/
    /' ---------------- Relations ---------------- '/
    /' ------------------------------------------- '/
    Main.Exchange.Procedures.Manager            -       Main.Exchange.Procedures.Procedure
    Main.Exchange.Procedures.Procedure          <|--    Main.Exchange.Procedures.AbstractProcedure
    Main.Exchange.Procedures.AbstractProcedure  <|--    Main.Exchange.Procedures.ExchangeProcedure

    Main.Exchange.Procedures.Procedure  *-- Main.Exchange.Procedures.Fields.FieldsSet
    Main.Exchange.Procedures.Procedure  *-- Main.Exchange.Procedures.Rules.Rule
    Main.Exchange.Procedures.Procedure  *-- Main.Exchange.Procedures.Data.ParticipantsSet
    Main.Exchange.Procedures.Procedure  *-- Main.Exchange.Procedures.Data.ProceduresSet

    Main.Exchange.Procedures.Fields.FieldsSet   o-- Main.Exchange.Procedures.Fields.Field
    Main.Exchange.Procedures.Rules.Rule         o-- Main.Exchange.Procedures.Rules.DataMatchingRules
    Main.Exchange.Procedures.Rules.Rule         o-- Main.Exchange.Procedures.Rules.DataCombiningRules

    Main.Exchange.Procedures.ExchangeProcedure      --[hidden]  Main.Exchange.Procedures.Fields.FieldsSet
    Main.Exchange.Procedures.Fields.FieldsSet       -[hidden]   Main.Exchange.Procedures.Rules.Rule
    Main.Exchange.Procedures.Data.ParticipantsSet   --[hidden]  Main.Exchange.Procedures.Data.ProceduresSet
}

@enduml